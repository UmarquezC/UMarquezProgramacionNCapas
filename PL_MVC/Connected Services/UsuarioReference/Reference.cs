//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL_MVC.UsuarioReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/SL_WCF")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ML.Usuario))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ML.Direccion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ML.Colonia))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ML.Municipio))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ML.Estado))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ML.Rol))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ObjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception Ex {
            get {
                return this.ExField;
            }
            set {
                if ((object.ReferenceEquals(this.ExField, value) != true)) {
                    this.ExField = value;
                    this.RaisePropertyChanged("Ex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] Objects {
            get {
                return this.ObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectsField, value) != true)) {
                    this.ObjectsField = value;
                    this.RaisePropertyChanged("Objects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsuarioReference.ICRUD")]
    public interface ICRUD {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/DoWork", ReplyAction="http://tempuri.org/ICRUD/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/DoWork", ReplyAction="http://tempuri.org/ICRUD/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioGetAll", ReplyAction="http://tempuri.org/ICRUD/usuarioGetAllResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Municipio))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Estado))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PL_MVC.UsuarioReference.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Colonia))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Direccion))]
        PL_MVC.UsuarioReference.Result usuarioGetAll(ML.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioGetAll", ReplyAction="http://tempuri.org/ICRUD/usuarioGetAllResponse")]
        System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioGetAllAsync(ML.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioUpdate", ReplyAction="http://tempuri.org/ICRUD/usuarioUpdateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Municipio))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Estado))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PL_MVC.UsuarioReference.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Colonia))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Direccion))]
        PL_MVC.UsuarioReference.Result usuarioUpdate(ML.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioUpdate", ReplyAction="http://tempuri.org/ICRUD/usuarioUpdateResponse")]
        System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioUpdateAsync(ML.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioDelete", ReplyAction="http://tempuri.org/ICRUD/usuarioDeleteResponse")]
        PL_MVC.UsuarioReference.Result usuarioDelete(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioDelete", ReplyAction="http://tempuri.org/ICRUD/usuarioDeleteResponse")]
        System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioDeleteAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioAdd", ReplyAction="http://tempuri.org/ICRUD/usuarioAddResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Municipio))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Estado))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(PL_MVC.UsuarioReference.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Colonia))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Direccion))]
        PL_MVC.UsuarioReference.Result usuarioAdd(ML.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioAdd", ReplyAction="http://tempuri.org/ICRUD/usuarioAddResponse")]
        System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioAddAsync(ML.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioGetById", ReplyAction="http://tempuri.org/ICRUD/usuarioGetByIdResponse")]
        PL_MVC.UsuarioReference.Result usuarioGetById(int IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICRUD/usuarioGetById", ReplyAction="http://tempuri.org/ICRUD/usuarioGetByIdResponse")]
        System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioGetByIdAsync(int IdUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICRUDChannel : PL_MVC.UsuarioReference.ICRUD, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CRUDClient : System.ServiceModel.ClientBase<PL_MVC.UsuarioReference.ICRUD>, PL_MVC.UsuarioReference.ICRUD {
        
        public CRUDClient() {
        }
        
        public CRUDClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CRUDClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRUDClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRUDClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public PL_MVC.UsuarioReference.Result usuarioGetAll(ML.Usuario usuario) {
            return base.Channel.usuarioGetAll(usuario);
        }
        
        public System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioGetAllAsync(ML.Usuario usuario) {
            return base.Channel.usuarioGetAllAsync(usuario);
        }
        
        public PL_MVC.UsuarioReference.Result usuarioUpdate(ML.Usuario usuario) {
            return base.Channel.usuarioUpdate(usuario);
        }
        
        public System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioUpdateAsync(ML.Usuario usuario) {
            return base.Channel.usuarioUpdateAsync(usuario);
        }
        
        public PL_MVC.UsuarioReference.Result usuarioDelete(int idUsuario) {
            return base.Channel.usuarioDelete(idUsuario);
        }
        
        public System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioDeleteAsync(int idUsuario) {
            return base.Channel.usuarioDeleteAsync(idUsuario);
        }
        
        public PL_MVC.UsuarioReference.Result usuarioAdd(ML.Usuario usuario) {
            return base.Channel.usuarioAdd(usuario);
        }
        
        public System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioAddAsync(ML.Usuario usuario) {
            return base.Channel.usuarioAddAsync(usuario);
        }
        
        public PL_MVC.UsuarioReference.Result usuarioGetById(int IdUsuario) {
            return base.Channel.usuarioGetById(IdUsuario);
        }
        
        public System.Threading.Tasks.Task<PL_MVC.UsuarioReference.Result> usuarioGetByIdAsync(int IdUsuario) {
            return base.Channel.usuarioGetByIdAsync(IdUsuario);
        }
    }
}

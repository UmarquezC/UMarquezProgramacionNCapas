@model ML.Sucursal
@{
    ViewBag.Title = "GetAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="~/Content/usuarioStyle/userGetAll.css">


<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=maps,marker"
        defer>

</script>


<div class="up">
    <h2>Sucursales</h2>
    <a href="@Url.Action("Form", "Sucursal")" class="btn btn-success">Agregar <i class="bi bi-person-fill-add" style="font-size:20px;"></i> </a>
</div>


<gmp-map center="37.4220656,-122.0840897" zoom="10" map-id="DEMO_MAP_ID" style="height: 400px"></gmp-map>

<div id="map">

</div>


@if (Model.Sucursales.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-hover table-bordered">
            <thead>
                <tr class="table-danger">
                    <th scope="col">Nombre</th>
                    <th scope="col">Latitud</th>
                    <th scope="col">Longitud</th>
                    <th scope="col">Editar</th>
                    <th scope="col">Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (ML.Sucursal sucursal in Model.Sucursales)
                {
                    <tr>
                        <td>@sucursal.Nombre</td>
                        <td>@sucursal.Latitud</td>
                        <td>@sucursal.Longitud</td>
                        <td>
                            <a href="@Url.Action("Form", "Sucursal", new { IdSucursal = sucursal.IdSucursal })" class="btn btn-warning">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("Form", "Sucursal", new { IdSucursal = sucursal.IdSucursal })" class="btn btn-danger" onclick="return confirm('seguro que quieres borrarlo?')">
                                <i class="bi bi-trash3-fill"></i>
                            </a>
                        </td>

                    </tr>
                }

            </tbody>
        </table>
    </div>

}


<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>

<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
        ({ key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly" });


    // The location of Uluru
    const position = { lat: -25.344, lng: 131.031 };
    // Request needed libraries.
    //@@ts-ignore
    const { Map } = await google.maps.importLibrary("maps");
    const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

    // The map, centered at Uluru
    map = new Map(document.getElementById("map"), {
        zoom: 4,
        center: position,
        mapId: "DEMO_MAP_ID",
    });

</script>
﻿﻿@model ML.Producto
@{
    ViewBag.Title = "GetAll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">


<script src="https://cdn.lordicon.com/lordicon.js"></script>



<style>

    body {
        background-color: #EEEDEB;
    }


    .wrapper {
        height: 380px;
        position: relative;
        overflow: hidden;
        background-color: white;
        display: flex;
        flex-direction: column;
        border-radius: 12px;
        padding: 25px 15px;
        margin-bottom: 20px;
        text-transform: uppercase;
        font-size: 10px;
        letter-spacing: 2px;
    }

    .wave {
        background: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/85486/wave.svg) repeat-x;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 6400px;
        height: 198px;
        animation: wave 7s cubic-bezier(0.36, 0.45, 0.63, 0.53) infinite;
        transform: translate3d(0, 0, 0);
        pointer-events: none;
        z-index: 0;
    }

        .wave:nth-of-type(2) {
            bottom: 0;
            animation: wave 7s cubic-bezier(0.36, 0.45, 0.63, 0.53) -.125s infinite, swell 7s ease -1.25s infinite;
            opacity: 1;
        }

    @@keyframes wave {
        0% {
            margin-left: 0;
        }

        100% {
            margin-left: -1600px;
        }
    }

    @@keyframes swell {
        0%, 100% {
            transform: translate3d(0,-25px,0);
        }

        50% {
            transform: translate3d(0,5px,0);
        }
    }


    .tittle {
        margin-bottom: 10px;
    }

        .tittle h1 {
            font-size: 48px;
            font-weight: 200;
        }

    .ddl {
        display: flex;
        align-content: center;
        justify-content: space-around;
    }

    .items-select {
        display: flex;
        align-content: center;
    }

    .Categoria {
        margin: 0px 20px 0px 0px;
    }

    .SubCategoria {
        margin: 0px 20px 0px 0px;
    }

    .Buscar {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .enter {
        display: flex;
        justify-content: center;
        align-content: center;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        color: black;
        height: 45px;
        width: 150px;
        border-radius: 5px;
        border: 2px solid #000;
        cursor: pointer;
        background-color: transparent;
        transition: 0.3s;
        text-transform: uppercase;
        font-size: 10px;
        letter-spacing: 2px;
    }

        .enter:hover {
            background-color: rgb(0, 0, 0);
            color: white;
        }

    .add {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 55px 0;
    }

    .table {
        border: 2px; 
    }

    .table thead {
        background-color: #222831;
        color: white;
    }

</style>






@using (Html.BeginForm("GetAll", "ProductoG", FormMethod.Post, new { id = "formBuscar" }))
{
    <div class="row @*row-cols-lg-4 mb-5*@">
        <div class="wrapper">

            <div class="tittle">
                <h1>Buscador de productos</h1>
            </div>

            <div class="ddl">
                <div class="items-select">
                    <div class="Categoria">
                        @Html.LabelFor(model => model.SubCategoria.Categoria)
                        @Html.DropDownListFor(model => model.SubCategoria.Categoria.IdCategoria, new SelectList(Model.SubCategoria.Categoria.Categorias, "IdCategoria", "Nombre"), "Selecciona una Categoria", new { @class = "form-control", @onchange = "cargarSubCategorias()", @id = "ddlCategoria" })
                    </div>

                    <div class="SubCategoria">
                        @Html.LabelFor(model => model.SubCategoria)

                        @if (Model.SubCategoria != null && Model.SubCategoria.SubCategorias != null && Model.SubCategoria.IdSubCategoria > 0)
                        {
                            @Html.DropDownListFor(model => model.SubCategoria.IdSubCategoria, new SelectList(Model.SubCategoria.SubCategorias, "IdSubCategoria", "Nombre", Model.SubCategoria.IdSubCategoria), "Selecciona la subcategoria ", new { @id = "ddlSubCategoria", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SubCategoria.IdSubCategoria, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.SubCategoria.IdSubCategoria, new SelectList(String.Empty), "Selecciona la subcategoria", new { @id = "ddlSubCategoria", @class = "form-control" })
                        }

                    </div>
                </div>

                <div class="Buscar">
                    <button type="submit" class="enter"> Buscar </button>
                </div>
            </div>

            <div class="ocean">
                <div class="wave"></div>
                <div class="wave"></div>
            </div>

        </div>

        <div class="add">
            <a href="@Url.Action("Form", "ProductoG")" class="enter">
                <div style="display: flex; align-items: center; justify-content: center;">
                    Agregar
                    <lord-icon src="~/Content/Cart.json"
                               trigger="hover"
                               stroke="bold"
                               state="hover-pinch"
                               colors="primary:#0000,secondary:#0000"
                               style="width:30px;height:30px">
                    </lord-icon>
                </div>
            </a>
        </div>

    </div>
}


@if (Model.Productos.Count > 0)
{
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="table-responsive">
                    <table class="table">
                        <thead class="">
                            <tr>
                                <th>Nombre</th>
                                <th>Descripcion</th>
                                <th>Precio</th>
                                <th>Imagen</th>
                                <th>Categoria</th>
                                <th>SubCategoria</th>
                                <th>Editar</th>
                                <th>Eliminar</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (ML.Producto producto in Model.Productos)
                            {
                                <tr>
                                    <td>@producto.Nombre</td>
                                    <td>@producto.Descripcion</td>
                                    <td>@producto.Precio</td>
                                    <td>
                                        <img src="@(producto.Imagen != null ? "data:image/png;base64," + Convert.ToBase64String(producto.Imagen) : "https://s3.amazonaws.com/roypi.com/static/images/default_product.png")" class="card-img-top" alt="@producto.Nombre">
                                    </td>
                                    <td>@producto.SubCategoria.Categoria.Nombre</td>
                                    <td>@producto.SubCategoria.Nombre</td>
                                    <td>
                                        <a href="@Url.Action("Form", "ProductoG",new { IdProducto = producto.IdProducto})" class="btn btn-warning"><i class="bi bi-pencil-square"></i> </a>
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Delete", "ProductoG",new { IdProducto = producto.IdProducto})" class="btn btn-danger"> <i class="bi bi-trash3-fill"></i> </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

else
{
    <div></div>
}


<script>
    document.querySelectorAll('a').forEach(addContainer => {
        const icon = addContainer.querySelector('lord-icon');

        addContainer.addEventListener('mouseover', () => {
            // Cambiar los colores a blanco cuando se pasa el mouse sobre el contenedor
            icon.setAttribute('colors', 'primary:#ffffff,secondary:#ffffff');
        });

        addContainer.addEventListener('mouseout', () => {
            // Restaurar los colores a transparentes cuando se quita el mouse del contenedor
            icon.setAttribute('colors', 'primary:#0000,secondary:#0000');
        });
    });



</script>

<script src="~/Scripts/jquery-3.7.0.js"></script>
<script> var ddlSuCategoriaUrl = "@Url.Action("GetAllByCategoria", "ProductoG")?ddlCategoria=" </script>
<script src="~/Scripts/js/Index.js"></script>
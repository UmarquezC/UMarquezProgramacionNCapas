@model ML.Producto


@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* From Uiverse.io by JkHuger */
    .login {
        color: #000;
        text-transform: uppercase;
        letter-spacing: 2px;
        display: block;
        font-weight: bold;
        font-size: x-large;
    }

    .card {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 350px;
        width: 300px;
        flex-direction: column;
        gap: 35px;
        background: #e3e3e3;
        box-shadow: 16px 16px 32px #c8c8c8, -16px -16px 32px #fefefe;
        border-radius: 8px;
    }

    .inputBox {
        position: relative;
        width: 250px;
    }

        .inputBox input {
            width: 100%;
            padding: 10px;
            outline: none;
            border: none;
            color: #000;
            font-size: 1em;
            background: transparent;
            border-left: 2px solid #000;
            border-bottom: 2px solid #000;
            transition: 0.1s;
            border-bottom-left-radius: 8px;
        }

        .inputBox span {
            margin-top: 5px;
            position: absolute;
            left: 0;
            transform: translateY(-4px);
            margin-left: 10px;
            padding: 10px;
            pointer-events: none;
            font-size: 12px;
            color: #000;
            text-transform: uppercase;
            transition: 0.5s;
            letter-spacing: 3px;
            border-radius: 8px;
        }

        .inputBox input:valid ~ span,
        .inputBox input:focus ~ span {
            transform: translateX(113px) translateY(-15px);
            font-size: 0.8em;
            padding: 5px 10px;
            background: #000;
            letter-spacing: 0.2em;
            color: #fff;
            border: 2px;
        }

        .inputBox input:valid,
        .inputBox input:focus {
            border: 2px solid #000;
            border-radius: 8px;
        }

    .enter {
        height: 45px;
        width: 100px;
        border-radius: 5px;
        border: 2px solid #000;
        cursor: pointer;
        background-color: transparent;
        transition: 0.5s;
        text-transform: uppercase;
        font-size: 10px;
        letter-spacing: 2px;
        margin-bottom: 1em;
    }

        .enter:hover {
            background-color: rgb(0, 0, 0);
            color: white;
        }
</style>

<h2>Producto</h2>


@using (Html.BeginForm("Form", "ProductoG", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.IdProducto)
    <div class="container">
        <div class="card">
            <h2 class="login">@(Model.IdProducto == 0 ? "Nuevo Producto" : "Editar Producto")</h2>

            <div class="inputBox">
                <div class="show">
                    @Html.HiddenFor(model => model.Imagen)
                    @if (Model.Imagen != null)
                    {
                        <img style="width: 100px; height:100px; border-radius:50%; object-fit:cover;" id="show" src="data:image/*;base64, @Convert.ToBase64String(Model.Imagen)" alt="Alternate Text" />
                    }
                    else
                    {
                        <img id="show" style="width: 100px; height:100px; border-radius:50%; object-fit:cover;" src="https://thumbs.dreamstime.com/b/default-avatar-profile-icon-social-media-user-vector-image-icon-default-avatar-profile-icon-social-media-user-vector-image-209162840.jpg" alt="Alternate Text" />
                    }
                </div>

                <div class="input">
                    <input class="form-control" type="file" accept="png, jpg, jpeg" name="inptFileImagen" id="inptFileImagen" onchange="validarImagen(), visualizarImg(this)" />
                </div>
            </div>

            @*<div class="inputBox">
                    @Html.TextBoxFor(model => model.Imagen, new { type = "file", required = "required" })
                    <span class="user">Imagen</span>
                </div>*@

            <div class="inputBox">
                @Html.TextBoxFor(model => model.Nombre, new { type = "text", required = "required" })
                <span class="user">Nombre</span>
            </div>

            <div class="inputBox">
                @Html.TextBoxFor(model => model.Descripcion, new { type = "text", required = "required" })
                <span>Descripcion</span>
            </div>


            <div class="inputBox">

                @Html.TextBoxFor(model => model.Precio, new { required = "required" })
                <span>Precio</span>
            </div>

            @*<div class="inputBox">
                    @Html.TextBoxFor(model => model.SubCategoria.Categoria.Nombre, new { type = "text", required = "required" })
                    <span>Categoria</span>
                </div>

                <div class="inputBox">
                    @Html.TextBoxFor(model => model.SubCategoria.Nombre, new { type = "text", required = "required" })
                    <span>SubCategoria</span>
                </div>*@

            <div class="inputBox">
                @Html.DropDownListFor(model => model.SubCategoria.Categoria.IdCategoria, new SelectList(Model.SubCategoria.Categoria.Categorias, "IdCategoria", "Nombre"), "Selecciona una Categoria", new { @class = "form-control", @onchange = "cargarSubCategorias()", @id = "ddlCategoria" })
                <span>Categoria</span>
            </div>


            <div class="inputBox">
                @if (Model.SubCategoria != null && Model.SubCategoria.SubCategorias != null && Model.SubCategoria.IdSubCategoria > 0)
                {
                    @Html.DropDownListFor(model => model.SubCategoria.IdSubCategoria, new SelectList(Model.SubCategoria.SubCategorias, "IdSubCategoria", "Nombre", Model.SubCategoria.IdSubCategoria), "Selecciona la subcategoria ", new { @id = "ddlSubCategoria", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SubCategoria.IdSubCategoria, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.SubCategoria.IdSubCategoria, new SelectList(String.Empty), "Selecciona la subcategoria", new { @id = "ddlSubCategoria", @class = "form-control" })
                }
                <span>SubCategoria</span>
            </div>

            <button type="submit" class="enter">Enter</button>

        </div>
    </div>

}

<script src="~/Scripts/jquery-3.7.0.js"></script>
<script> var ddlSuCategoriaUrl = "@Url.Action("GetAllByCategoria", "ProductoG")?ddlCategoria=" </script>
<script src="~/Scripts/js/Index.js"></script>
@model ML.Usuario

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/usuarioStyle/userForm.css">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Pixelify+Sans:wght@400..700&display=swap" rel="stylesheet">

<link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="~/Scripts/js/FormJs.js"></script>
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://code.jquery.com/ui/1.14.1/jquery-ui.js"></script>


<main>
    <div class="form">

        @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            <fieldset>
                @Html.HiddenFor(model => model.IdUsuario)
                @Html.HiddenFor(model => model.Imagen)
                <div class="usuario">
                    <div class="user">
                        <div class="text">
                            <h2>Usuario</h2>
                        </div>

                        <div class="boximg">
                            <div class="show">
                                @if (Model.Imagen != null)
                                {
                                    <img id="show" src="data:image/*;base64, @Convert.ToBase64String(Model.Imagen)" alt="Alternate Text" style="object-fit:cover" />
                                }
                                else
                                {
                                    <img id="show" src="https://thumbs.dreamstime.com/b/default-avatar-profile-icon-social-media-user-vector-image-icon-default-avatar-profile-icon-social-media-user-vector-image-209162840.jpg" alt="Alternate Text" />
                                }
                            </div>

                            <div class="input">
                                <input class="form-control" type="file" accept="png, jpg, jpeg" name="inptFileImagen" id="inptFileImagen" onchange="validarImagen(), visualizarImg(this)" />
                            </div>
                        </div>
                    </div>

                    <div class="row row-cols-3">
                        <div class="col">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @onkeypress = "soloLetras(event)", @onblur = "clean(event)", @class = "input-group mb-3 " })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class="text-danger"})
                            <span class="error"></span>
                        </div>
                        
                        <div class="col">
                            @Html.LabelFor(model => model.ApellidoPaterno)
                            @Html.TextBoxFor(model => model.ApellidoPaterno, "", new { @onkeypress = "soloLetras(event)", @onblur = "clean(event)", @class = "input-group mb-3 "})
                            @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class="text-danger" })
                            <span class="error"></span>
                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @onkeypress = "soloLetras(event)", @onblur = "clean(event)", @class = "input-group mb-3 " })
                            @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                            <span class="error"></span>
                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.UserName)
                            @Html.TextBoxFor(model => model.UserName, new { @onkeypress = "soloLetras(event)", @onblur = "clean(event)", @class = "input-group mb-3 " })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            <span class="error"></span>
                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.Email)
                            @Html.TextBoxFor(model => model.Email, new { @type = "email", @onblur = "soloEmail(this)", placeholder = "example@gmail.com", @class = "input-group mb-3 " })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <span class="error"></span>
                        </div>


                        <div class="col">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { type = "text", @class = "input-group mb-3 ", @id = "datepicker", @name = "FechaNacimiento" })
                            @*<input type="text" class="input-group mb-3 " id="datepicker" name="FechaNacimiento" />*@
                            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                        </div>

                        <div class="col">
                            <div class="form-check form-check-inline">
                                @Html.LabelFor(model => model.Sexo, "Hombre", new { @class = "form-check-label" })
                                @Html.RadioButtonFor(model => model.Sexo, "M", new { @class = "input-group mb-3 " })
                            </div>

                            <div class="form-check form-check-inline">
                                @Html.LabelFor(model => model.Sexo, "Mujer", new { @class = "form-check-label" })
                                @Html.RadioButtonFor(model => model.Sexo, "F", new { @class = "input-group mb-3 " })
                            </div>
                            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { type = "tel", @class = "input-group mb-3 ", @onkeypress = "soloNumero(event)", @onblur = "clean(event)" })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                            <span class="error"></span>

                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.Celular)
                            @Html.TextBoxFor(model => model.Celular, new { type = "tel", @class = "input-group mb-3 ", @onkeypress = "soloNumero(event)", @onblur = "clean(event)" })
                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                            <span class="error"></span>
                        </div>

                        <input type="hidden" name="Estatus" value="true" />

                        <div class="col">
                            @Html.LabelFor(model => model.Curp)
                            @Html.TextBoxFor(model => model.Curp, new { @class = "input-group mb-3 "})
                            @Html.ValidationMessageFor(model => model.Curp, "", new { @class = "text-danger" })
                            <span id="resultado"></span>
                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.Password)
                            @Html.PasswordFor(model => model.Password, new { @class = "input-group mb-3 ", @onblur = "validarContraseña(event)" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <span class="error"></span>

                            <div class="col">
                                <label class="row" for="password-confirm">Confirmar Contraseña </label>
                                <input name="password-confirm" onblur="comparar(this)" id="pass" />
                                <span class="error"></span>
                            </div>
                        </div>

                        <div class="col">
                            @Html.LabelFor(model => model.Rol)
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre", Model.IdUsuario), new { @class = "input-group mb-3 " })
                        </div>
                    </div>

                </div>

                <div class="direccion mt-3">
                    <h2>Direccion</h2>

                    <div class="row row-cols-3">

                        <div class="col">
                            <h6>Calle</h6>
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "input-group mb-3 " })
                        </div>

                        <div class="col">
                            <h6>Numero Interior</h6>
                            @Html.TextBoxFor(model => model.Direccion.NumeroInteriror, new { @class = "input-group mb-3 " })
                        </div>

                        <div class="col">
                            <h6>Numero Exterior</h6>
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "input-group mb-3 " })
                        </div>

                        <div class="col">
                            <h6>Selecciona tu Estado</h6>
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleccione un Estado", new { @onchange = "MunicipioGetByEstado()", @id = "ddlEstado" })
                        </div>

                        <div class="col">
                            <h6>Selecciona tu municipio</h6>
                            @if (Model.Direccion.Colonia.Municipio.Municipios != null || Model.Direccion.Colonia.Municipio.IdMunicipio > 0)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre_Municipio"), "Selecciona un municipio", new { @onchange = "ColoniaGetAllByMunicipio()", @id = "ddlMunicipio" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(String.Empty), "Selecciona un municipio", new { @onchange = "ColoniaGetAllByMunicipio()", @id = "ddlMunicipio"})
                            }
                        </div>

                        <div class="col">
                            <h6>Selecciona tu colonia</h6>
                            @if (Model.Direccion.Colonia.Colonias != null || Model.Direccion.Colonia.IdColonia > 0)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre_Colonia"), "Selecciona una colonia", new { @id = "ddlColonia" })

                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(String.Empty), "Selecciona una colonia", new { @id = "ddlColonia"})
                            }

                        </div>
                    </div>
                </div>

                <div class="cambiarboton">
                    <input class="btn btn-success mt-5" style="padding: 10px 80px;" type="submit" value="Guardar" />
                </div>

            </fieldset>
        }
    </div>
</main>

<script>
    var ddlMunicipioUrl = "@Url.Action("GetAllByEstado", "Usuario")?IdEstado="
    var ddlColoniaUrl = '@Url.Action("GetAllByMunicipio", "Usuario")?IdMunicipio='
</script>
<script src="~/Scripts/js/FormJs.js"></script>